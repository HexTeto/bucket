## 在集群中管理索引的注意事项

<br>
<br>

#### Indexes in replica set

在副本集中建立索引最简单的方式就是在主节点上建立索引并等待系统自动同步到其它节点.
但当建立索引的集合体积较大时, 一旦所有备份节点同时开始同步创建索引的过程,
就会在一段时间内阻止客户端访问并可能导致后续同步操作出现问题.
因此, 对于副本集中拥有较大集合时推荐采用的方式是:
1. 关闭一个备份节点实例;
2. 在单机模式下重启该实例并在它上面创建索引;
3. 重新将其作为副本集成员加入副本集;
4. 在所有备份节点上重复该过程.
5. 完成备份节点操作后, 视主节点性能和业务负载决定是在主节点后台创建索引还是离线主节点根据上述步骤创建索引.

#### Indexes in sharded cluster

在分片集群上建立索引与在副本集中的方法类似,
需要注意的是要先关闭均衡器, 然后将每个分片视为单独的副本集执行在副本集中建立索引的过程.

#### Remove indexes

在使用 `dropIndexes` 命令删除索引时需要注意, 该命令无法移除 `_id` 索引,
且索引不会随着集合中所有文档被移除而移除, 新插入文档后索引依旧会正常生效.

#### OOM Killer

考虑到 MongoDB 使用内存的方式, 除了在建立索引的情况下, 它的进程通常不会被 OOM Killer 终止.
而一旦出现建立索引时 `mongod` 进程突然消失的情况, 而检查系统日志又并未发现任何异常,
可以检查 `/var/log/messages` 看是否是由于系统判定该进程会导致内存溢出而导致的.

```
kernel: Killed process 2771 (mongod)
kernel: init invoked oom-killer: gfp_mask=0x201d2, order=0, oomkilladj=0
```

如果看到类似上面这样的输出结果, 就可以判定该问题是由于 OOM Killer 导致的.
如果开启了 journaling, 此时重启 `mongod` 进程即可. 否则就需要恢复备份或者与其他副本同步.

通常在后台建立索引或者磁盘设置足够大的交换空间即可避免此类情况.
如果拥有主机的管理员权限, 也可以将 MongoDB 设置为不可以被 OOM Killer 终止的进程.
